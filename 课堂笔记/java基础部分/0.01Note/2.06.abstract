抽象方法：
	没有方法体的方法，叫抽象方法
	抽象方法，必须放在抽象类中
	
抽象类和普通类的区别：
	1.抽象类不能被实例化，如果一定要实例化，只能用子类
	2.抽象类中可以有抽象方法，也可以没有抽象方法，普通类中一定不能有抽象方法
	

接口：
	由抽象类中提取出来，只定义方法，即只定义要做的事儿，不定义具体怎么执行的一个类	
	
实现接口关键字：implements
	
	
	
接口特点：
	1.所有的接口都是抽象类，接口中的所有方法都是抽象方法
	2.接口不可以被实例化，如果想要实例化，只能用子类
	3.子类实现接口，就必须要重写接口中的所有方法
	
接口和抽象类：
	相同点：	
		1.都是对抽象的描述
		2.都可以有抽象方法
		3.都不可以被实例化
	不同点：
		1.子类继承/实现关键字不一样，抽象类extends,接口是implements
		2.抽象类只能单继承，但可以多层继承；接口可以多实现，用“,”隔开
		3.抽象类中可以有不是抽象的方法，接口里必须都是抽象方法
		3.接口中的变量都是静态常量
		4.抽象类有构造方法，接口没有
	
	
对象、类、方法
形参/实参、值传递/引用传递
封装、继承、多态
四个修饰符
重载重写
static this super final
	static: 变量、方法、代码块
	final:
		变量 --> 把变量变成常量
		方法 --> 表示这个方法不可以被重写
		类 --> 表示这个类不可以被继承
构造方法
继承里父类子类方法执行顺序
抽象类/接口
常用异常
	
	
	
	
	
	
	
	
	
	
	